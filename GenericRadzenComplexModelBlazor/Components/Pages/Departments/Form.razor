﻿@using Repository.Interface
@using Model

@inject NotificationService NotificationService
@inject DialogService DialogService
@inject IGenericRepository<Department> Repository
@inject IGenericRepository<Instructor> IRepository


<RadzenTemplateForm TItem="Department" Data="@obj" Submit="SaveForm">
    <RadzenFieldset Text="Basic data">
        <RadzenRow AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" RowGap="1rem">
            <RadzenColumn Size="12">
                <RadzenFormField Text="Name" Style="width: 100%">
                    <ChildContent>
                        <RadzenTextBox Name="Name" @bind-Value="obj.Name" />
                    </ChildContent>
                    <Helper>
                        <RadzenLengthValidator Component="Name" Text="predugačako (max 50 karaktera)" Max="50" />
                    </Helper>
                </RadzenFormField>
            </RadzenColumn>
            <RadzenColumn Size="12">
                <RadzenFormField Text="Budget" Style="width: 100%">
                    <ChildContent>
                        <RadzenNumeric Name="Budget" @bind-Value="obj.Budget" />
                    </ChildContent>
                    <Helper>
                        <RadzenLengthValidator Component="Credits" Text="predugačako (max 50 karaktera)" Max="50" />
                    </Helper>
                </RadzenFormField>
            </RadzenColumn>
            <RadzenColumn Size="12">
                <RadzenFormField Text="Instructor" Style="width: 100%">
                    <ChildContent>
                        <RadzenDropDown @bind-Value="obj.InstructorID" AllowVirtualization="true" AllowClear="true" Data=@instructor TextProperty="LastName" ValueProperty="ID" />
                    </ChildContent>
                </RadzenFormField>
            </RadzenColumn>
        </RadzenRow>
    </RadzenFieldset>

    <RadzenRow JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center" class="rz-mt-4">
        <RadzenColumn Size="6" class="rz-text-align-end">
            <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary" Icon="save" Text="Sačuvaj" />
        </RadzenColumn>
        <RadzenColumn Size="6" class="rz-text-align-start">
            <RadzenButton ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Light" Icon="cancel" Style="display: inline-block; margin-left: 10px;" Text="Poništi" Click="ShowInsertDepartment" />
        </RadzenColumn>
    </RadzenRow>

</RadzenTemplateForm>


@code {
    [Parameter]
    public int ID { get; set; }
    public Department obj = new Department();

    protected IEnumerable<Instructor> instructor;

    protected override async Task OnInitializedAsync()
    {
        if (ID != 0)
        {
            obj = await Repository.Get(ID);
        }
        instructor = await IRepository.Get();
    }

    public void SaveForm()
    {
        if (ID != 0)
        {
            bool result = Repository.Update(obj);
            DialogService.Close(result);
        }
        else
        {
            bool result = Repository.Add(obj);
            DialogService.Close(result);
        }

    }

    public void Close()
    {
        DialogService.Close();
    }

    public async Task ShowInsertDepartment()
    {
        dynamic x = await DialogService.OpenAsync<GenericRadzenComplexModelBlazor.Components.Pages.Departments.Form>("New");
        if (x != null && x is bool)
        {
            if (x)
            {
                NotificationService.Notify(NotificationSeverity.Success, "Uspešno", "Uspešno sačuvan autor", 3000);
            }
            else
            {
                NotificationService.Notify(NotificationSeverity.Error, "Greška", "Greška prilikom dodavanja novog autora", 7000);
            }
        }
    }
}